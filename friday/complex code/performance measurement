from memory_profiler import profile
import cProfile
import time
pip install memory-profiler


# Function to simulate a time-consuming operation

def time_consuming_operation():
    total = 0
    for _ in range(1000000):
        total += 1
    return total

# Function to profile code execution time


def profile_execution_time():
    start_time = time.time()
    time_consuming_operation()
    end_time = time.time()
    execution_time = end_time - start_time
    print(f"Execution Time: {execution_time:.4f} seconds")

# Function to profile memory usage


@profile
def profile_memory_usage():
    data = [0] * 1000000
    return data


if __name__ == "__main__":
    print("Profiling Execution Time:")
    profile_execution_time()

    print("\nProfiling Memory Usage:")
    profile_memory_usage()
