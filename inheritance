# Define a base class (superclass)
class Animal:
    def __init__(self, name, species):
        self.name = name
        self.species = species

    def make_sound(self):
        pass

# Define a subclass (derived class) that inherits from Animal


class Dog(Animal):
    def __init__(self, name, breed):
        # Call the constructor of the base class using super()
        super().__init__(name, species="Dog")
        self.breed = breed

    def make_sound(self):
        return "Woof!"

# Define another subclass (derived class) that inherits from Animal


class Cat(Animal):
    def __init__(self, name, color):
        super().__init__(name, species="Cat")
        self.color = color

    def make_sound(self):
        return "Meow!"


# Create instances of the subclasses
dog = Dog("Buddy", "Golden Retriever")
cat = Cat("Whiskers", "Orange")

# Access attributes and call methods of the instances
print(f"{dog.name} is a {dog.species} ({dog.breed}).")
print(f"{cat.name} is a {cat.species} ({cat.color} cat).")
print(dog.make_sound())
print(cat.make_sound())


# We define a base class Animal with attributes name and species, and a method make_sound that is meant to be overridden by subclasses.
# We define two subclasses, Dog and Cat, which inherit from the Animal class using the class Subclass(BaseClass) syntax.
# Each subclass has its own constructor (__init__) to set additional attributes (breed for Dog and color for Cat), and they call the constructor of the base class using super().__init__().
# Each subclass also overrides the make_sound method to provide a specific sound for that animal.
# We create instances of the Dog and Cat classes, and then access their attributes and call their methods.
